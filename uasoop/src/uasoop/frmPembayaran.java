/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uasoop;

import java.sql.Connection;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gguna
 */
public class frmPembayaran extends javax.swing.JFrame {
    
    private int idUntukUpdate = 0;

    /**
     * Creates new form frmPembayaran
     */
    public frmPembayaran() {
        initComponents();
        loadTableData();
        
        
        javax.swing.ButtonGroup statusGroup = new javax.swing.ButtonGroup();
        statusGroup.add(radioLunas);
        statusGroup.add(radioBelum);

    
        radioBelum.setSelected(true);
    }
    
    private void resetForm() {
        txNama.setText("");
        txAlamat.setText("");
        txTelp.setText("");
        txJenisTagihan.setText("");
        txJmlTagihan.setText("");
        radioBelum.setSelected(true);
        btnSimpan.setText("Simpan");
        this.idUntukUpdate = 0;
}
    
    private void loadTableData() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Bersihkan data sebelumnya

    // Gunakan try-with-resources untuk memastikan koneksi ditutup otomatis
    try (Connection conn = dbkoneksi.getConnection()) {
        String query = "SELECT pelanggan.id_pelanggan, pelanggan.nama, pelanggan.alamat, pelanggan.telp, " +
                       "tagihan.jenis_tagihan, tagihan.jumlah_tagihan, tagihan.status_pembayaran " +
                       "FROM tagihan " +
                       "JOIN pelanggan ON tagihan.id_pelanggan = pelanggan.id_pelanggan";
        
        try (PreparedStatement pstmt = conn.prepareStatement(query);
             ResultSet rs = pstmt.executeQuery()) {
            
            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id_pelanggan"), // Ambil ID Pelanggan
                    rs.getString("nama"),
                    rs.getString("alamat"),
                    rs.getString("telp"),
                    rs.getString("jenis_tagihan"),
                    rs.getDouble("jumlah_tagihan"),
                    rs.getString("status_pembayaran")
                };
                model.addRow(row);
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error memuat data: " + e.getMessage());
    } 
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txNama = new javax.swing.JTextField();
        txAlamat = new javax.swing.JTextField();
        txTelp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txJmlTagihan = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        radioLunas = new javax.swing.JRadioButton();
        radioBelum = new javax.swing.JRadioButton();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        txJenisTagihan = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Bebas Neue", 0, 24)); // NOI18N
        jLabel1.setText("APLIKASI PENCATATAN PEMBAYARAN TAGIHAN BULANAN");

        txNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNamaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Alamat", "No. Telepon", "Jenis Tagihan", "Jumlah Tagihan", "Status Tagihan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Nama Pelanggan");

        jLabel3.setText("Alamat");

        jLabel4.setText("No. Telepon");

        jLabel5.setText("Jenis tagihan");

        jLabel6.setText("Jumlah Tagihan");

        jLabel7.setText(" Status Pembayaran");

        radioLunas.setText("Lunas");
        radioLunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioLunasActionPerformed(evt);
            }
        });

        radioBelum.setText("Belum Lunas");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(377, 377, 377))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txNama)
                            .addComponent(txAlamat)
                            .addComponent(txTelp)
                            .addComponent(txJmlTagihan)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnSimpan)
                                    .addComponent(radioLunas, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioBelum, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnEdit)
                                        .addGap(9, 9, 9)
                                        .addComponent(btnHapus))))
                            .addComponent(txJenisTagihan, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txJenisTagihan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txJmlTagihan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioLunas)
                                .addComponent(radioBelum)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnHapus)
                            .addComponent(btnEdit))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNamaActionPerformed

    private void radioLunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioLunasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioLunasActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String nama = txNama.getText();
    String alamat = txAlamat.getText();
    String telp = txTelp.getText();
    String jenisTagihan = txJenisTagihan.getText();
    double jmlTagihan;
    try {
        jmlTagihan = Double.parseDouble(txJmlTagihan.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Jumlah tagihan harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    String status = radioLunas.isSelected() ? "Lunas" : "Belum Lunas";

    if (idUntukUpdate == 0) {
        // MODE TAMBAH DATA BARU (INSERT)
        String queryPelanggan = "INSERT INTO pelanggan (nama, alamat, telp) VALUES (?, ?, ?)";
        String queryTagihan = "INSERT INTO tagihan (id_pelanggan, jenis_tagihan, jumlah_tagihan, status_pembayaran) VALUES (?, ?, ?, ?)";
        try (Connection conn = dbkoneksi.getConnection()) {
            conn.setAutoCommit(false);
            int generatedId = 0;
            try (PreparedStatement pstmt = conn.prepareStatement(queryPelanggan, Statement.RETURN_GENERATED_KEYS)) {
                pstmt.setString(1, nama);
                pstmt.setString(2, alamat);
                pstmt.setString(3, telp);
                pstmt.executeUpdate();
                try (ResultSet rs = pstmt.getGeneratedKeys()) {
                    if (rs.next()) {
                        generatedId = rs.getInt(1);
                    }
                }
            }
            try (PreparedStatement pstmt = conn.prepareStatement(queryTagihan)) {
                pstmt.setInt(1, generatedId);
                pstmt.setString(2, jenisTagihan);
                pstmt.setDouble(3, jmlTagihan);
                pstmt.setString(4, status);
                pstmt.executeUpdate();
            }
            conn.commit();
            JOptionPane.showMessageDialog(this, "Data baru berhasil disimpan!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data baru: " + e.getMessage());
        }
    } else {
        // MODE EDIT DATA (UPDATE)
        String queryPelanggan = "UPDATE pelanggan SET nama = ?, alamat = ?, telp = ? WHERE id_pelanggan = ?";
        String queryTagihan = "UPDATE tagihan SET jenis_tagihan = ?, jumlah_tagihan = ?, status_pembayaran = ? WHERE id_pelanggan = ?";
        try (Connection conn = dbkoneksi.getConnection()) {
            conn.setAutoCommit(false);
            try (PreparedStatement pstmt = conn.prepareStatement(queryPelanggan)) {
                pstmt.setString(1, nama);
                pstmt.setString(2, alamat);
                pstmt.setString(3, telp);
                pstmt.setInt(4, this.idUntukUpdate);
                pstmt.executeUpdate();
            }
            try (PreparedStatement pstmt = conn.prepareStatement(queryTagihan)) {
                pstmt.setString(1, jenisTagihan);
                pstmt.setDouble(2, jmlTagihan);
                pstmt.setString(3, status);
                pstmt.setInt(4, this.idUntukUpdate);
                pstmt.executeUpdate();
            }
            conn.commit();
            JOptionPane.showMessageDialog(this, "Data berhasil di-update!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal meng-update data: " + e.getMessage());
        }
    }
    loadTableData();
    resetForm();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Simpan ID dari baris yang dipilih ke variabel penanda
        this.idUntukUpdate = (int) jTable1.getValueAt(selectedRow, 0);

        // Ambil data dari tabel
        String nama = jTable1.getValueAt(selectedRow, 1).toString();
        String alamat = jTable1.getValueAt(selectedRow, 2).toString();
        String telp = jTable1.getValueAt(selectedRow, 3).toString();
        String jenisTagihan = jTable1.getValueAt(selectedRow, 4).toString();
        String jumlahTagihan = jTable1.getValueAt(selectedRow, 5).toString();
        String status = jTable1.getValueAt(selectedRow, 6).toString();

        // Tampilkan data di form
        txNama.setText(nama);
        txAlamat.setText(alamat);
        txTelp.setText(telp);
        txJenisTagihan.setText(jenisTagihan);
        txJmlTagihan.setText(jumlahTagihan);
        if (status.equals("Lunas")) {
            radioLunas.setSelected(true);
        } else {
            radioBelum.setSelected(true);
        }

        // Ubah teks tombol untuk menandakan mode update
        btnSimpan.setText("Update");
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih baris data yang ingin dihapus!");
            return;
        }

        // Ambil ID dari kolom pertama (kolom 0)
        int idPelanggan = (int) jTable1.getValueAt(selectedRow, 0);

        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Query untuk menghapus dari kedua tabel
        // Hapus dari tagihan dulu untuk menghindari error foreign key
        String queryTagihan = "DELETE FROM tagihan WHERE id_pelanggan = ?";
        String queryPelanggan = "DELETE FROM pelanggan WHERE id_pelanggan = ?";

        try (Connection conn = dbkoneksi.getConnection()) {
            conn.setAutoCommit(false); // Mulai transaksi

            try (PreparedStatement pstmtTagihan = conn.prepareStatement(queryTagihan)) {
                pstmtTagihan.setInt(1, idPelanggan);
                pstmtTagihan.executeUpdate();
            }

            try (PreparedStatement pstmtPelanggan = conn.prepareStatement(queryPelanggan)) {
                pstmtPelanggan.setInt(1, idPelanggan);
                pstmtPelanggan.executeUpdate();
            }

            conn.commit(); // Konfirmasi transaksi
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
            loadTableData(); // Refresh tabel

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error saat menghapus data: " + e.getMessage());
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPembayaran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton radioBelum;
    private javax.swing.JRadioButton radioLunas;
    private javax.swing.JTextField txAlamat;
    private javax.swing.JTextField txJenisTagihan;
    private javax.swing.JTextField txJmlTagihan;
    private javax.swing.JTextField txNama;
    private javax.swing.JTextField txTelp;
    // End of variables declaration//GEN-END:variables
}
